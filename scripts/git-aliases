#!/usr/bin/env bash

# See: https://sharats.me/posts/shell-script-best-practices/
set -o errexit
set -o nounset
set -o pipefail

cd "$(dirname "$0")"

help() {
  echo 'Usage: git-aliases install | uninstall

Install or uninstall git aliases to work with Ethereal UI.
'
}

install() {
  # "Internal" used by other aliases
  git config alias.current-branch 'rev-parse --abbrev-ref HEAD'  
  git config alias.no-wip '![[ -z $(git status -s) ]] || ( echo "There are modified or untracked files. Make sure to commit or stash any work in progress." >&2; false )'

  # Start a new feature branch  
  git config alias.feature '!f() { git switch --create "${1}"; }; git no-wip && git switch main && (git pull || (echo "Git failed to get the latest changes from main. Switching back to the previous branch"; git switch -; false)) && f'
  
  # Undo the last commit
  git config alias.undo 'reset --soft HEAD~'
  
  # Update the current branch by pulling changes from main
  git config alias.update 'pull --rebase origin main'
  
  # Interactive rebase of the last (unmerged) commits in the current branch
  git config alias.squash 'pull --rebase=interactive origin main'
  
  # Force push changes in a feature branch
  git config alias.publish '!git no-wip && git push --set-upstream origin $(git current-branch) --force-with-lease'
  
  # Merge a feature branch into main
  git config alias.main-merge '!BRANCH=$(git current-branch) && ([[ "$BRANCH" != "main" ]] || (echo "Cannot merge from main to main, switch to a feature branch"; false)) && git no-wip && git switch main && git pull && git merge --ff-only "$BRANCH" && git push --no-verify && git push origin --delete "$BRANCH" --no-verify'
  
  # Merge changes from main to release
  git config alias.release '!BRANCH=$(git current-branch) && ([[ "$BRANCH" = "main" ]] || (echo "Cannot release from a feature branch, switch to main"; false)) && git no-wip && git pull && git push --no-verify && git switch release && git pull --ff-only && git pull --ff-only origin main && git push --no-verify && git switch main'
}

uninstall() {
  git config --unset alias.current-branch
  git config --unset alias.no-wip
  git config --unset alias.feature
  git config --unset alias.undo
  git config --unset alias.update
  git config --unset alias.squash
  git config --unset alias.main-merge
  git config --unset alias.release
}
  
main() {
  if [[ "$1" = "install" ]]; then
    install
  elif [[ "$1" = "uninstall" ]]; then
    uninstall
  else
    help
  fi
}

if [[ "${1-}" =~ ^--?h(elp)?$ || $# -eq 0 ]]; then
  help
  exit
fi

main "$@"